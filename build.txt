Lecture 1: IO
-------------

Prelectures: 1, 2, (not 3), 4, 5, optional: 7b
1. Multiply R1 x R2 -> R3
2. Take a character from the keyboard and send it to the display,
   without using traps / IN / OUT / GETC / PUTC

Lecture 2: Repeated Code TRAP and Subroutine
--------------------------------------------

Prelectures: 6, 7a
1. Configure LC-3 so that TRAP x10 multiplies R1 * R2 and stores the result
   in R0. [Bonus: ensure the loop runs no more than 16 times]
2. Rewrite the multiplication TRAP as a subroutine
3. Write a subroutine to compute the factorial of R1 and puts the result in R0

Lecture 3: Stack
----------------

Prelectures: 8, 9a-b
1. Write PUSH and POP on the stack using R6 as a stack pointer
2. Balanced Parentheses

Lecture 4: Stack Usage
----------------------

Prelectures: 9c
1. A train enters a track in some order given by a string from R1
   and the desired output order is in R2. In between the input and output
   is a spur that serves as a stack. Output the sequence of moves
   the rail cars should follow, where U is push, P is pop, and O is over
   (basically a push and a pop). For example, if the inbound order is ABC,
   and the output order is BAC, then the proper order is UOPO, which pushes
   train A, sends train B over, pops train A, and sends train C over.
2. Write STACKADD and STACKMUL to take the top two values from the stack,
   add and multiply them respectively, and push the result back on the stack.

Lecture 5: C
------------

Prelecture: 12

Lecture 6: C
------------

Prelecture: 13, 14a-c

1. Print an ASCII table from 33-127 inclusive
2. Print the primes from 2-100
3. Riemann integrate x*x from a to b over n steps

And, we're ahead:
4. Riemann integrate an arbitrary function from a to b over n steps

Lecture 7: C functions
----------------------

Prelecture: 15, 16a-b

1. Write a function that computes a-choose-b (binomial coefficient)
2. "Recursive" fibonacci + C-to-LC3

We're ahead, please see Prelecture 17, 18a-c also

2. Revisiting: "Recursive" fibonacci + C-to-LC3
3. Maximum of 3 numbers

Lecture 8: Runtime Stack
------------------------

Do Lecture 9 material. Also
1. Function to swap two values

(Original schedule) Prelecture: 17, 18a-c

Lecture 9: Pointers & Arrays
----------------------------

Prelecture: 19-22b (22c optional)
1. Swap two parameters
2. Compute the sum of the elements in an array
3. Compute the nth row of Pascal's Triangle without multiplication

MIDTERM 1

Lecture 10: Strings and Multi-Dimensional Arrays
------------------------------------------------

Prelecture: 23-24b
1. String length
2. String reverse

Lecture 11: Problem solving with pointers and arrays
----------------------------------------------------

Guest Lecturer: Prof. Yuting Chen
Prelecture: 25a-25b

1. Linear search
2. Binary search
3. Bubble sort
4. Insertion Sort

Lecture 12: Recursion
---------------------

Prelecture: 26-27b

1. Factorial
2. Quicksort

Lecture 13: Problem Solving with Recursion
------------------------------------------

Prelecture: 28a-28b

1. n-queens
2. Sudoku

Lecture 14: File I/O in C
-------------------------

Prelecture: 29

1. PPM blur
Documentation for PPM format:
https://netpbm.sourceforge.net/doc/ppm.html

Lecture 15: Data Structures
---------------------------

Prelecture: 30-31

1. Student structure I/O

====================
=== Spring Break ===
====================

Lecture 16: Dynamic Memory Allocation
-------------------------------------

Prelecture: 32

